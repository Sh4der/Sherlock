[
    {
        "id": "8434b087.927d2",
        "type": "tab",
        "label": "Light Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9728b2c4.dec5f",
        "type": "mqtt out",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "zigbee2mqtt/stehlampe/set",
        "qos": "",
        "retain": "",
        "broker": "f80b985a.2ffa78",
        "x": 1320,
        "y": 220,
        "wires": []
    },
    {
        "id": "ea0320c1.64ce8",
        "type": "mqtt out",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "zigbee2mqtt/licht/set",
        "qos": "",
        "retain": "",
        "broker": "f80b985a.2ffa78",
        "x": 1300,
        "y": 100,
        "wires": []
    },
    {
        "id": "93c8edc7.8ba22",
        "type": "mqtt out",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "zigbee2mqtt/garagenlicht/set",
        "qos": "",
        "retain": "",
        "broker": "f80b985a.2ffa78",
        "x": 1320,
        "y": 160,
        "wires": []
    },
    {
        "id": "872a6eed.a0dda",
        "type": "mqtt in",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "hermes/intent/ChangeLightState",
        "qos": "2",
        "datatype": "json",
        "broker": "f80b985a.2ffa78",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "b2c51d75.6c96a"
            ]
        ]
    },
    {
        "id": "f0052ec3.903f6",
        "type": "mqtt in",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "hermes/intent/ChangeLightBrightness",
        "qos": "2",
        "datatype": "json",
        "broker": "e19fa228.bc1cf",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "b2c51d75.6c96a"
            ]
        ]
    },
    {
        "id": "d97d595c.cac858",
        "type": "mqtt in",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "hermes/intent/ChangeLightColor",
        "qos": "2",
        "datatype": "json",
        "broker": "e19fa228.bc1cf",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "b2c51d75.6c96a"
            ]
        ]
    },
    {
        "id": "d4a24dfb.dfbb8",
        "type": "mqtt in",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "hermes/intent/ChangeLightTemperature",
        "qos": "2",
        "datatype": "json",
        "broker": "e19fa228.bc1cf",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "b2c51d75.6c96a"
            ]
        ]
    },
    {
        "id": "b2c51d75.6c96a",
        "type": "function",
        "z": "8434b087.927d2",
        "name": "Switch-Case-Slots",
        "func": "var message = {\n    cmd: \"\",\n    name: \"\",\n    state: \"\",\n    brightness: \"\",\n    color: \"\",\n    temperature: \"\"\n};\n\nfor (var i = 0; i < msg.payload.slots.length; i++) {\n        switch(msg.payload.slots[i].slotName) {\n            case \"cmd\":\n                message.cmd = msg.payload.slots[i].value.value;\n            break;\n            case \"name\":\n                message.name = msg.payload.slots[i].value.value;\n            break;\n            case \"state\":\n                message.state = msg.payload.slots[i].value.value;\n            break;\n            case \"brightness\":\n                message.brightness = msg.payload.slots[i].value.value;\n            break;\n                case \"color\":\n                message.color = msg.payload.slots[i].value.value;\n            break;\n                case \"temperature\":\n                message.temperature = msg.payload.slots[i].value.value;\n            break;\n            default:\n    }\n}\n\nreturn message;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "e6795e84.47b54"
            ]
        ]
    },
    {
        "id": "effba0ba.e806c",
        "type": "switch",
        "z": "8434b087.927d2",
        "name": "Switch device",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "licht",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "garagenlicht",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stehlampe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alle lampen",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1040,
        "y": 200,
        "wires": [
            [
                "ea0320c1.64ce8"
            ],
            [
                "93c8edc7.8ba22"
            ],
            [
                "9728b2c4.dec5f"
            ],
            [
                "de695818.2c5b58"
            ]
        ]
    },
    {
        "id": "e6795e84.47b54",
        "type": "function",
        "z": "8434b087.927d2",
        "name": "transform input",
        "func": "if (msg.state) {\n    if (msg.state.toString() === \"ein\" | msg.state.toString() === \"an\") {\n        msg.payload = {\n            state: \"ON\"\n        }\n    } else if (msg.state.toString() === \"aus\") {\n        msg.payload = {\n            state: \"OFF\"\n        }\n    }\n    return msg;   \n}\n\n\nif (msg.brightness) {\n    msg.payload = {\n        brightness: msg.brightness / 100 * 255\n    }\n    return msg;\n}\n    \nif (msg.temperature) {\n    switch(msg.temperature) {\n        case \"warmweiß\":\n            msg.payload = {\n                color_temp: 400\n            }\n        break;  \n        case \"kaltweiß\":\n            msg.payload = {\n                color_temp: 50\n            }\n        break;\n        default:\n    }\n    return msg;    \n}\n\nif (msg.color) {\n    switch(msg.color) {\n    case \"blau\":\n        msg.payload = {\n            color: {\n                hex: \"0x0000FF\"    \n            }\n        }\n    break;  \n    \n    case \"rot\":\n        msg.payload = {\n            color: {\n                hex: \"0xFF0000\"    \n            }\n        }\n    break;\n    \n    case \"gelb\":\n        msg.payload = {\n            color: {\n                hex: \"0xFFFF00\"    \n            }\n        }\n    break;\n    \n    case \"grün\":\n        msg.payload = {\n            color: {\n                hex: \"0x008000\"    \n            }\n        }\n    break;\n    \n    case \"lila\":\n        msg.payload = {\n            color: {\n                hex: \"0x800080\"    \n            }\n        }\n    break;\n    \n    case \"weiß\":\n        msg.payload = {\n            color: {\n                hex: \"0xFFFFFF\"    \n            }\n        }\n    break;\n    default:\n    }\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 200,
        "wires": [
            [
                "effba0ba.e806c",
                "db47b771.0e30c8"
            ]
        ]
    },
    {
        "id": "de695818.2c5b58",
        "type": "mqtt out",
        "z": "8434b087.927d2",
        "name": "",
        "topic": "zigbee2mqtt/1/set",
        "qos": "",
        "retain": "",
        "broker": "f80b985a.2ffa78",
        "x": 1290,
        "y": 280,
        "wires": []
    },
    {
        "id": "db47b771.0e30c8",
        "type": "debug",
        "z": "8434b087.927d2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 280,
        "wires": []
    },
    {
        "id": "8a6b1f92.15824",
        "type": "comment",
        "z": "8434b087.927d2",
        "name": "Light management",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "f80b985a.2ffa78",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e19fa228.bc1cf",
        "type": "mqtt-broker",
        "name": "mqtt",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]
